/**
 * API Empleados
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Empleado from '../model/Empleado';
import EmpleadoDelete from '../model/EmpleadoDelete';
import EmpleadoInput from '../model/EmpleadoInput';
import EmpleadoUpdate from '../model/EmpleadoUpdate';

/**
* Empleados service.
* @module api/EmpleadosApi
* @version 1.0.0
*/
export default class EmpleadosApi {

    /**
    * Constructs a new EmpleadosApi. 
    * @alias module:api/EmpleadosApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the empleadosDelete operation.
     * @callback module:api/EmpleadosApi~empleadosDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Eliminar un empleado
     * @param {module:model/EmpleadoDelete} empleadoDelete 
     * @param {module:api/EmpleadosApi~empleadosDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    empleadosDelete(empleadoDelete, callback) {
      let postBody = empleadoDelete;
      // verify the required parameter 'empleadoDelete' is set
      if (empleadoDelete === undefined || empleadoDelete === null) {
        throw new Error("Missing the required parameter 'empleadoDelete' when calling empleadosDelete");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/empleados', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the empleadosGet operation.
     * @callback module:api/EmpleadosApi~empleadosGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/Empleado>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Obtener la lista de empleados
     * @param {module:api/EmpleadosApi~empleadosGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/Empleado>}
     */
    empleadosGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [Empleado];
      return this.apiClient.callApi(
        '/empleados', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the empleadosPost operation.
     * @callback module:api/EmpleadosApi~empleadosPostCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Crear un nuevo empleado
     * @param {module:model/EmpleadoInput} empleadoInput 
     * @param {module:api/EmpleadosApi~empleadosPostCallback} callback The callback function, accepting three arguments: error, data, response
     */
    empleadosPost(empleadoInput, callback) {
      let postBody = empleadoInput;
      // verify the required parameter 'empleadoInput' is set
      if (empleadoInput === undefined || empleadoInput === null) {
        throw new Error("Missing the required parameter 'empleadoInput' when calling empleadosPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/empleados', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the empleadosPut operation.
     * @callback module:api/EmpleadosApi~empleadosPutCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Actualizar un empleado existente
     * @param {module:model/EmpleadoUpdate} empleadoUpdate 
     * @param {module:api/EmpleadosApi~empleadosPutCallback} callback The callback function, accepting three arguments: error, data, response
     */
    empleadosPut(empleadoUpdate, callback) {
      let postBody = empleadoUpdate;
      // verify the required parameter 'empleadoUpdate' is set
      if (empleadoUpdate === undefined || empleadoUpdate === null) {
        throw new Error("Missing the required parameter 'empleadoUpdate' when calling empleadosPut");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/empleados', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
